from enum import Enum, StrEnum
from dataclasses import dataclass
from .utils_decorate_docstring import docstring_parameter, ParameterDataclasses

#-------------------DINC ANALYSIS PARAMETERS--------------------------#


# Size of DINC's output: number of lowest-energy conformations and clusters returned to the user.
# If you use the special value -1, then all the conformations generated by DINC will be returned.
DEFAULT_DINC_N_OUT: int = 3

# Specify whether the score vs RMSD plot should be computed or not.
DINC_PLOT_SCORE_RMSD = StrEnum('DINC_PLOT_SCORE_RMSD', [('YES', 'yes'), ('NO', 'no')])
DEFAULT_DINC_PLOT_SCORE_RMSD = DINC_PLOT_SCORE_RMSD.YES

# Type of RMSD (root mean square deviation) calculations: symmetric, normal
class DINC_RMSD(str, Enum):
    NORMAL = "NORMAL"
    SYMMETRIC = "SYMMETRIC"
DEFAULT_DINC_RMSD = DINC_RMSD.NORMAL

@dataclass
@docstring_parameter(DEFAULT_DINC_N_OUT, DEFAULT_DINC_PLOT_SCORE_RMSD, DEFAULT_DINC_RMSD)
class DincAnalysisParams(ParameterDataclasses):
    '''
    Parameters for DINC-Ensemble analysis.

    Attributes
    ----------
    n_out : int
        The number of lowest-energy conformations and clusters returned to the user.
        If the special value 'all' is used, all the conformations generated by DINC will be returned.
        Defaults to {0}
    plot_score_vs_rmsd : DINC_PLOT_SCORE_RMSD
        Specifies whether the score vs RMSD plot should be computed or not.
        Defaults to {1}
    dinc_rmsd : DINC_RMSD
        Type of RMSD (root mean square deviation) calculations - symmetric, normal.
        Defaults to {2}
   '''
   
    n_out: int = DEFAULT_DINC_N_OUT
    plot_score_vs_rmsd: DINC_PLOT_SCORE_RMSD = DEFAULT_DINC_PLOT_SCORE_RMSD
    dinc_rmsd: DINC_RMSD = DEFAULT_DINC_RMSD